name: "tagged-release"

on:
  push:
    tags:
      - "v*"

jobs:
  tagged-release:
    name: "Tagged Release"
    runs-on: "ubuntu-latest"

    steps:
    - uses: actions/checkout@v2

    - uses: olegtarasov/get-tag@v2.1
      id: tagName

    - name: Update config
      run: |
        cat > client/cloud_render/config.ini << EOF
        [default]
        Version = ${GIT_TAG_NAME}
        Deployment = prod
        EOF

    - name: Zip files
      run: |
        cd client/
        zip -r ../cloud-render-${GIT_TAG_NAME}.zip cloud_render -x "*/__pycache__/"

    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        files: |
          cloud-render-${{ steps.tagName.outputs.tag }}.zip

  # Docker images
  build-cpu:
    name: Build Server (CPU)
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: olegtarasov/get-tag@v2.1
      id: tagName

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: docker/Dockerfile.server
        build-args: BASE_IMAGE=ubuntu:focal
        push: true
        tags: cgundlach13/cloud-render-server-cpu:${{ steps.tagName.outputs.tag }}

  build-gpu:
    name: Build Server (GPU)
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: olegtarasov/get-tag@v2.1
      id: tagName

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: docker/Dockerfile.server
        push: true
        tags: cgundlach13/cloud-render-server-gpu:${{ steps.tagName.outputs.tag }}